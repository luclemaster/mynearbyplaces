{"version":3,"sources":["logo.svg","components/Entry.js","serverInterface/entries.js","serverInterface/server.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","props","onChange","event","value","target","setState","location","displayReviews","entry","reviews","map","review","className","state","currentReview","this","name","city","description","React","Component","entries","address","infoText","api","server","fetchEntries","fetch","then","x","json","addReview","page","push","fetchPropery","val","propList","i","length","createPage","new_name","new_info","method","headers","body","JSON","stringify","changeInfo","deleteIndex","console","log","searchPlaces","search","Home","openPage","pickedResult","HomePage","updateChanges","editingPage","cancelChanges","chooseCategory","category","searchLocations","catch","e","seached","writeReview","postReview","editName","editCity","editState","editInfo","deletePage","editPage","fillResults","mappedList","onClick","selection","type","searched","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80edf449.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\nimport './InfoPage.css'\r\nclass Entry extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            currentReview : \"\"\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            location : value\r\n        });\r\n    }\r\n    \r\n    displayReviews = () => {\r\n        return this.props.entry.reviews.map((review) => {\r\n            return <p className='reviewText'>{review}</p>\r\n        })\r\n    }\r\n    \r\n    //<this.displayReviews displayReviews/>\r\n    render(){\r\n\r\n        return(\r\n            <div className='pageInfo'>\r\n                <label className=\"titleText\">{this.props.entry.name}</label>\r\n                <div>{this.props.entry.city}</div>\r\n                <div>{this.props.entry.state}</div>\r\n                <div>{this.props.entry.description}</div>\r\n                <label className='reviewArea'>Reviews</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Entry","let entries = [\r\n    {\r\n        name: \"Momo's\",\r\n        address: '1838 E. 6th Street',\r\n        infoText: \"Delicious mexican food with everyday specials\",\r\n        reviews: []\r\n    },\r\n    {\r\n        name: \"Empire Pizza\",\r\n        address: \"7250 S Tucson Blvd\",\r\n        infoText: \"Delicous pizza, has creative monthly specialty pizzas\",\r\n        reviews: []\r\n    },\r\n    {\r\n        name: \"Trident Grill\",\r\n        address: \"2033 E Speedway Blvd\",\r\n        infoText: \"Great bar with friendly people!\",\r\n        reviews: []\r\n    }\r\n];\r\nexport default entries","import entries from './entries'\r\nvar api = 'https://luclemaster-nearbyplaces-api.herokuapp.com';\r\nlet server = {\r\n    fetchEntries: () => { return fetch(api + '/places').then(x => x.json())},\r\n\r\n    addReview: (review, page) => {\r\n        entries[page].reviews.push(review);\r\n    },\r\n    fetchPropery: (val) => {\r\n        let propList = []\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            propList.push(entries[i][val]);\r\n        }\r\n        return propList;\r\n    },\r\n    createPage: (new_name, city, state, new_info) => {\r\n        //entries.push(pageInfo);\r\n        fetch(api + '/place', \r\n        {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: new_name,\r\n                city: city,\r\n                state: state,\r\n                description: new_info\r\n            })\r\n        });\r\n    },\r\n    changeInfo: (name, city, state, description, page) => {\r\n        entries[page].name = name;\r\n        entries[page].city = city;\r\n        entries[page].state = state;\r\n        entries[page].description = description;\r\n    },\r\n    deleteIndex: (name) => {\r\n        console.log(name);\r\n        fetch(api + '/delete/' + name)\r\n    },\r\n    searchPlaces: (city, state, search) => {\r\n        return fetch(api + '/search/' + search + '/' + city + ',' + state).then(x => x.json())\r\n    }\r\n};\r\nexport default server","import React from 'react'\r\n//import App from '../App';\r\nimport Entry from './Entry'\r\nimport server from '../serverInterface/server'\r\nimport entries from '../serverInterface/entries'\r\nimport  './Home.css'\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            entries: \"\",\r\n            page: 0,\r\n            location: \"\",\r\n            category: \"\",\r\n            currentReview: \"\",\r\n            pickedResult: false,\r\n            editingPage: false,\r\n            name: \"\",\r\n            address: \"\",\r\n            city: \"\", \r\n            state: \"\",\r\n            description: \"\",\r\n            searched: false\r\n        }\r\n    }\r\n    openPage = (event) => {\r\n        this.setState({ pickedResult: true});\r\n    }\r\n    HomePage = () => {\r\n        this.setState({ pickedResult: false})\r\n    }\r\n    componentDidMount() {\r\n        if(this.state.searched) {\r\n            server.searchPlaces(this.state.city, this.state.state, this.state.description).then(x => this.setState({entries: x})).catch(e => console.log(e));\r\n        }\r\n        else{\r\n            server.fetchEntries().then(x => this.setState({entries: x})).catch(e => console.log(e));\r\n        }\r\n        console.log(this.state.entries);\r\n    }\r\n\r\n    updateChanges = () => {\r\n        server.createPage(this.state.name, this.state.city, this.state.state, this.state.description);\r\n        this.setState({editingPage: false,\r\n            pickedResult: false})\r\n        this.setState({name: \"\", addReview: \"\", description: \"\" })\r\n    }\r\n    cancelChanges = () => {\r\n        this.setState({editingPage: false});\r\n        this.setState({name: \"\", addReview: \"\", description: \"\" })\r\n    }\r\n    chooseCategory = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            category : value\r\n        });\r\n    }\r\n    searchLocations = () => {\r\n        server.searchPlaces(this.state.city, this.state.state, this.state.description).then(x => this.setState({entries: x})).catch(e => console.log(e));\r\n        this.setState ({\r\n            seached: true,\r\n            city: \"\",\r\n            state: \"\",\r\n            description: \"\"\r\n        });\r\n    }\r\n    writeReview = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            currentReview : value\r\n        });\r\n    }\r\n    postReview = () => {\r\n        server.addReview(this.state.currentReview, this.state.page)\r\n        this.setState ({\r\n            currentReview : \"\"\r\n        })\r\n    }\r\n    editName = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            name : value\r\n        });\r\n    }\r\n    editCity = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            city : value\r\n        });\r\n    }\r\n    editState = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            state : value\r\n        });\r\n    }\r\n    editInfo = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            description : value\r\n        });\r\n    }\r\n    deletePage = () => {\r\n        if(!this.state.pickedResult) {\r\n            this.cancelChanges();\r\n        }\r\n        else {\r\n            server.deleteIndex(this.state.name);\r\n        }\r\n        this.setState({pickedResult: false, \r\n        editingPage: false});\r\n    }\r\n    editPage = () => {\r\n            this.setState({\r\n                name: \"\",\r\n                    city: \"\",\r\n                    state: \"\",\r\n                    description: \"\"\r\n            })\r\n        this.setState({editingPage: true})\r\n    }\r\n    fillResults = () => {\r\n        const { entries, page } = this.state\r\n        let mappedList = [];\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            mappedList.push(i)\r\n        }\r\n        return mappedList.map((val) => {\r\n            return (\r\n                <div className='restaurantArea'>\r\n                    <label className='titleText'>{entries[val].name}</label>\r\n                    <br></br>\r\n                    <text>{entries[val].city}</text>\r\n                    <br></br>\r\n                    <text>{entries[val].state}</text>\r\n                    <br></br>\r\n                    <text>{entries[val].description}</text>\r\n                    <br></br>\r\n                    <button onClick={() => {this.state.page = val; this.state.name = entries[val].name;\r\n                    this.openPage();}} className='pageButton'>Open Page</button>\r\n                    <br></br>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n    body = () => {\r\n        const { entries, page } = this.state\r\n        return (\r\n            <div>\r\n                {entries.length > 0 ? \r\n                <div className=\"Entry\">\r\n                    <Entry entry={entries[page]} />\r\n                </div>\r\n                :\r\n                ''}\r\n            </div>\r\n        )\r\n    }\r\n    selection = () => {\r\n        return(\r\n            <div>\r\n                <label className='boldText'>City:</label>\r\n                <input \r\n                type =\"text\" \r\n                value={this.state.city}\r\n                onChange={this.editCity}\r\n                ></input>\r\n                <label className='boldText'>State:</label>\r\n                <input \r\n                type =\"text\" \r\n                value={this.state.state}\r\n                onChange={this.editState}\r\n                ></input>\r\n                <label className='boldText'>Search:</label>\r\n                <input \r\n                type =\"text\" \r\n                value={this.state.description}\r\n                onChange={this.editInfo}\r\n                ></input>\r\n                <button onClick={this.searchLocations}>Search</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const location = this.state.location;\r\n        if(this.state.editingPage) {\r\n            return (\r\n                <div>\r\n                    <label>Name</label>\r\n                    <input value={this.state.name} className='editBox' onChange={this.editName}></input>\r\n                    <br></br>\r\n                    <label>City</label>\r\n                    <input value={this.state.city} className='editBox' onChange={this.editCity}></input>\r\n                    <label>State</label>\r\n                    <input value={this.state.state} className='editBox' onChange={this.editState}></input>\r\n                    <br></br>\r\n                    <label>Description</label>\r\n                    <input value ={this.state.description} className='editBox' onChange={this.editInfo}></input>\r\n                    <br></br>\r\n                    <button onClick={this.cancelChanges} className='cancelButton'>Cancel Changes</button>\r\n                    <button onClick={this.updateChanges} className='submitButton'>Submit</button>\r\n                </div>\r\n            )\r\n        } else if (this.state.pickedResult) {\r\n            return(\r\n                <div className='restaurantArea'>\r\n                    <button onClick ={this.HomePage}>Home Page</button>\r\n                    <button onClick={this.deletePage}>Delete Page</button>\r\n                    <this.body body />\r\n                    <lable></lable>\r\n                    <input \r\n                    type =\"text\" \r\n                    value={this.state.currentReview}\r\n                    onChange={this.writeReview}\r\n                    className='commentBox'\r\n                    ></input>\r\n                    <button onClick={this.postReview}>Post a Review!</button>\r\n                    <br></br>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className='pageBackground'>\r\n                    <this.selection selection />\r\n                    <this.fillResults fillResults/>\r\n                    <br></br>\r\n                    <button onClick={this.editPage} className=\"createPage\">Add a location!</button>\r\n                    <br></br>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Home\r\n//photo search\r\n//https://maps.googleapis.com/maps/api/place/photo?photoreference={}maxheight={200}key={app_id}\r\n//info search\r\n//https://maps.googleapis.com/maps/api/place/textsearch/json?query={type of place}+in+{city}key={app_id}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}