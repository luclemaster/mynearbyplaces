{"version":3,"sources":["logo.svg","components/Entry.js","serverInterface/entries.js","serverInterface/server.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","props","onChange","event","value","target","setState","location","displayReviews","entry","reviews","map","review","className","state","currentReview","this","name","address","infoText","React","Component","entries","server","fetchEntries","addReview","page","push","fetchPropery","val","propList","i","length","createPage","new_name","new_address","new_info","pageInfo","changeInfo","deleteIndex","splice","Home","openPage","pickedResult","HomePage","updateChanges","editingPage","cancelChanges","chooseLocation","chooseCategory","category","writeReview","postReview","editName","editAddress","editInfo","deletePage","editPage","fillResults","mappedList","onClick","body","selection","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc15517.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react'\r\nimport './InfoPage.css'\r\nclass Entry extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            currentReview : \"\"\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            location : value\r\n        });\r\n    }\r\n    displayReviews = () => {\r\n        return this.props.entry.reviews.map((review) => {\r\n            return <p className='reviewText'>{review}</p>\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className='pageInfo'>\r\n                <label className=\"titleText\">{this.props.entry.name}</label>\r\n                <div>{this.props.entry.address}</div>\r\n                <div>{this.props.entry.infoText}</div>\r\n                <label className='reviewArea'>Reviews</label>\r\n                <this.displayReviews displayReviews/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Entry","let entries = [\r\n    {\r\n        name: \"Momo's\",\r\n        address: '1838 E. 6th Street',\r\n        infoText: \"Delicious mexican food with everyday specials\",\r\n        reviews: []\r\n    },\r\n    {\r\n        name: \"Empire Pizza\",\r\n        address: \"7250 S Tucson Blvd\",\r\n        infoText: \"Delicous pizza, has creative monthly specialty pizzas\",\r\n        reviews: []\r\n    },\r\n    {\r\n        name: \"Trident Grill\",\r\n        address: \"2033 E Speedway Blvd\",\r\n        infoText: \"Great bar with friendly people!\",\r\n        reviews: []\r\n    }\r\n];\r\nexport default entries","import entries from './entries'\r\nlet server = {\r\n    fetchEntries: () => {\r\n        return entries;\r\n    },\r\n    addReview: (review, page) => {\r\n        entries[page].reviews.push(review);\r\n    },\r\n    fetchPropery: (val) => {\r\n        let propList = []\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            propList.push(entries[i][val]);\r\n        }\r\n        return propList;\r\n    },\r\n    createPage: (new_name, new_address, new_info) => {\r\n        let pageInfo = {\r\n            name: new_name, \r\n            address: new_address, \r\n            infoText: new_info,\r\n            reviews: []\r\n        }\r\n        entries.push(pageInfo);\r\n    },\r\n    changeInfo: (name, address, infoText, page) => {\r\n        entries[page].name = name;\r\n        entries[page].address = address;\r\n        entries[page].infoText = infoText;\r\n    },\r\n    deleteIndex: (page) => {\r\n        entries.splice(page,1);\r\n    }\r\n}\r\nexport default server","import React from 'react'\r\n//import App from '../App';\r\nimport Entry from './Entry'\r\nimport server from '../serverInterface/server'\r\nimport entries from '../serverInterface/entries'\r\nimport  './Home.css'\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            entries: \"\",\r\n            page: 0,\r\n            location: \"\",\r\n            category: \"\",\r\n            currentReview: \"\",\r\n            pickedResult: false,\r\n            editingPage: false,\r\n            name: \"\",\r\n            address: \"\",\r\n            infoText: \"\"\r\n        }\r\n    }\r\n    openPage = (event) => {\r\n        this.setState({ pickedResult: true});\r\n    }\r\n    HomePage = () => {\r\n        this.setState({ pickedResult: false})\r\n    }\r\n    componentDidMount() {\r\n        const entries = server.fetchEntries();\r\n        this.setState({ entries: entries });\r\n    }\r\n\r\n    updateChanges = () => {\r\n        if(this.setState.pickedResult){\r\n            server.changeInfo(this.state.name,\r\n                this.state.address, this.state.infoText, this.state.page)\r\n        }\r\n        else{\r\n            server.createPage(this.state.name,this.state.address, this.state.infoText)\r\n        }\r\n        this.setState({editingPage: false,\r\n            pickedResult: false})\r\n        this.setState({name: \"\", addReview: \"\", infoText: \"\" })\r\n    }\r\n    cancelChanges = () => {\r\n        this.setState({editingPage: false});\r\n        this.setState({name: \"\", addReview: \"\", infoText: \"\" })\r\n    }\r\n    chooseLocation = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            location : value\r\n        });\r\n    }\r\n    chooseCategory = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            category : value\r\n        });\r\n    }\r\n    writeReview = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            currentReview : value\r\n        });\r\n    }\r\n    postReview = () => {\r\n        server.addReview(this.state.currentReview, this.state.page)\r\n        this.setState ({\r\n            currentReview : \"\"\r\n        })\r\n    }\r\n    editName = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            name : value\r\n        });\r\n    }\r\n    editAddress = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            address : value\r\n        });\r\n    }\r\n    editInfo = (event) => {\r\n        const value = event.target.value\r\n        this.setState ({\r\n            infoText : value\r\n        });\r\n    }\r\n    deletePage = () => {\r\n        if(!this.state.pickedResult) {\r\n            this.cancelChanges();\r\n        }\r\n        else {\r\n            server.deleteIndex(this.state.page);\r\n        }\r\n        this.setState({pickedResult: false, \r\n        editingPage: false});\r\n    }\r\n    editPage = () => {\r\n        if (this.state.pickedResult) {\r\n            this.setState({\r\n                name: entries[this.state.page].name,\r\n                address: entries[this.state.page].address,\r\n                infoText: entries[this.state.page].infoText\r\n            }) \r\n        } else{\r\n            this.setState({\r\n                name: \"\",\r\n                    address: \"\",\r\n                    infoText: \"\"\r\n            })\r\n        }\r\n\r\n        this.setState({editingPage: true})\r\n    }\r\n    fillResults = () => {\r\n        const { entries, page } = this.state\r\n        let mappedList = [];\r\n        for (let i = 0; i < entries.length; i++)\r\n        {\r\n            mappedList.push(i)\r\n        }\r\n        return mappedList.map((val) => {\r\n            return (\r\n                <div className='restaurantArea'>\r\n                    <label className='titleText'>{entries[val].name}</label>\r\n                    <br></br>\r\n                    <text>{entries[val].address}</text>\r\n                    <br></br>\r\n                    <text>{entries[val].infoText}</text>\r\n                    <br></br>\r\n                    <button onClick={() => {this.state.page = val; \r\n                    this.openPage();}} className='pageButton'>Open Page</button>\r\n                    <br></br>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n    body = () => {\r\n        const { entries, page } = this.state\r\n        return (\r\n            <div>\r\n                {entries.length > 0 ? \r\n                <div className=\"Entry\">\r\n                    <Entry entry={entries[page]} />\r\n                </div>\r\n                :\r\n                ''}\r\n            </div>\r\n        )\r\n    }\r\n    selection = () => {\r\n        return(\r\n            <div>\r\n                <lable className='boldText'>City:</lable>\r\n                <input \r\n                type =\"text\" \r\n                value={this.state.location}\r\n                onChange={this.chooseLocation}\r\n                ></input>\r\n                <button>Search</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const location = this.state.location;\r\n        if(this.state.editingPage) {\r\n            return (\r\n                <div>\r\n                    <label>Name</label>\r\n                    <input value={this.state.name} className='editBox' onChange={this.editName}></input>\r\n                    <br></br>\r\n                    <label>address</label>\r\n                    <input value={this.state.address} className='editBox' onChange={this.editAddress}></input>\r\n                    <br></br>\r\n                    <label>Information</label>\r\n                    <input value ={this.state.infoText} className='editBox' onChange={this.editInfo}></input>\r\n                    <br></br>\r\n                    <button onClick={this.deletePage} className='deleteButton'>Delete Page</button>\r\n                    <button onClick={this.cancelChanges} className='cancelButton'>Cancel Changes</button>\r\n                    <button onClick={this.updateChanges} className='submitButton'>Submit</button>\r\n                </div>\r\n            )\r\n        } else if (this.state.pickedResult) {\r\n            return(\r\n                <div className='restaurantArea'>\r\n                    <button onClick ={this.HomePage}>Home Page</button>\r\n                    <button onClick={this.editPage}>Edit Page</button>\r\n                    <this.body body />\r\n                    <lable></lable>\r\n                    <input \r\n                    type =\"text\" \r\n                    value={this.state.currentReview}\r\n                    onChange={this.writeReview}\r\n                    className='commentBox'\r\n                    ></input>\r\n                    <button onClick={this.postReview}>Post a Review!</button>\r\n                    <br></br>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className='pageBackground'>\r\n                    <this.selection selection />\r\n                    <this.fillResults fillResults/>\r\n                    <br></br>\r\n                    <button onClick={this.editPage} className=\"createPage\">Add a location!</button>\r\n                    <br></br>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Home\r\n//photo search\r\n//https://maps.googleapis.com/maps/api/place/photo?photoreference={}maxheight={200}key={app_id}\r\n//info search\r\n//https://maps.googleapis.com/maps/api/place/textsearch/json?query={type of place}+in+{city}key={app_id}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}